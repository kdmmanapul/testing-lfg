{"version":3,"file":"pixi-tilemap.js","sourceRoot":"","sources":["../src/CanvasTileRenderer.ts","../src/CompositeRectTileLayer.ts","../src/Constant.ts","../src/GraphicsLayer.ts","../src/RectTileLayer.ts","../src/RectTileShader.ts","../src/TileRenderer.ts","../src/SimpleTileRenderer.ts","../src/ZLayer.ts","../src/exporter.ts","../src/shaderGenerator.ts"],"names":[],"mappings":"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","sourcesContent":["namespace pixi_tilemap {\r\n\r\n    export class CanvasTileRenderer {\r\n\r\n        renderer: PIXI.CanvasRenderer;\r\n        tileAnim = [0, 0];\r\n        dontUseTransform = false;\r\n\r\n        constructor(renderer: PIXI.CanvasRenderer) {\r\n            this.renderer = renderer;\r\n            this.tileAnim = [0, 0];\r\n        }\r\n    }\r\n\r\n    PIXI.CanvasRenderer.registerPlugin('tilemap', CanvasTileRenderer);\r\n\r\n}\r\n","/// <reference types=\"pixi.js\" />\n\nnamespace pixi_tilemap {\n\n    export class CompositeRectTileLayer extends PIXI.Container {\n\n        constructor(zIndex?: number, bitmaps?: Array<PIXI.Texture>, texPerChild?: number) {\n            super();\n            this.initialize.apply(this, arguments);\n        }\n\n        updateTransform() {\n            super.displayObjectUpdateTransform()\n        }\n\n        z: number;\n        zIndex: number;\n        modificationMarker = 0;\n        shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n        _globalMat: PIXI.Matrix = null;\n        _lastLayer: RectTileLayer = null;\n\n        texPerChild: number;\n\n        initialize(zIndex?: number, bitmaps?: Array<PIXI.Texture>, texPerChild?: number) {\n            if (texPerChild as any === true) {\n                //old format, ignore it!\n                texPerChild = 0;\n            }\n            this.z = this.zIndex = zIndex;\n            this.texPerChild = texPerChild || Constant.boundCountPerBuffer * Constant.maxTextures;\n            if (bitmaps) {\n                this.setBitmaps(bitmaps);\n            }\n        }\n\n        setBitmaps(bitmaps: Array<PIXI.Texture>) {\n            var texPerChild = this.texPerChild;\n            var len1 = this.children.length;\n            var len2 = Math.ceil(bitmaps.length / texPerChild);\n            var i: number;\n            for (i = 0; i < len1; i++) {\n                (this.children[i] as RectTileLayer).textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n            }\n            for (i = len1; i < len2; i++) {\n                var layer = new RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild));\n                layer.compositeParent = true;\n                layer.offsetX = Constant.boundSize;\n                layer.offsetY = Constant.boundSize;\n                this.addChild(layer);\n            }\n        }\n\n        clear() {\n            for (var i = 0; i < this.children.length; i++) {\n                (this.children[i] as RectTileLayer).clear();\n            }\n            this.modificationMarker = 0;\n        }\n\n        addRect(textureIndex: number, u: number, v: number, x: number, y: number, tileWidth: number, tileHeight: number, animX?: number, animY?: number, rotate?: number, animWidth?: number, animHeight?: number): this {\n            const childIndex: number = textureIndex / this.texPerChild >> 0;\n            const textureId: number = textureIndex % this.texPerChild;\n\n            if (this.children[childIndex] && (this.children[childIndex] as RectTileLayer).textures) {\n                this._lastLayer = (this.children[childIndex] as RectTileLayer);\n                this._lastLayer.addRect(textureId, u, v, x, y, tileWidth, tileHeight, animX, animY, rotate, animWidth, animHeight);\n            } else {\n                this._lastLayer = null;\n            }\n\n            return this;\n        }\n\n        tileRotate(rotate: number): this {\n            if (this._lastLayer)\n            {\n                this._lastLayer.tileRotate(rotate);\n            }\n            return this;\n        }\n\n        tileAnimX(offset: number, count: number): this {\n            if (this._lastLayer)\n            {\n                this._lastLayer.tileAnimX(offset, count);\n            }\n            return this;\n        }\n\n        tileAnimY(offset: number, count: number): this {\n            if (this._lastLayer)\n            {\n                this._lastLayer.tileAnimY(offset, count);\n            }\n            return this;\n        }\n\n        addFrame(texture_: PIXI.Texture | String | number, x: number, y: number, animX?: number, animY?: number, animWidth?: number, animHeight?: number): this {\n            var texture: PIXI.Texture;\n            var layer: RectTileLayer = null;\n            var ind: number = 0;\n            var children = this.children;\n\n            this._lastLayer = null;\n            if (typeof texture_ === \"number\") {\n                var childIndex = texture_ / this.texPerChild >> 0;\n                layer = children[childIndex] as RectTileLayer;\n\n                if (!layer) {\n                    layer = children[0] as RectTileLayer;\n                    if (!layer) {\n                        return this;\n                    }\n                    ind = 0;\n                } else {\n                    ind = texture_ % this.texPerChild;\n                }\n\n                texture = layer.textures[ind];\n            } else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.fromImage(texture_);\n                } else {\n                    texture = texture_ as PIXI.Texture;\n                }\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i] as RectTileLayer;\n                    var tex = child.textures;\n                    for (var j = 0; j < tex.length; j++) {\n                        if (tex[j].baseTexture === texture.baseTexture) {\n                            layer = child;\n                            ind = j;\n                            break;\n                        }\n                    }\n                    if (layer) {\n                        break;\n                    }\n                }\n\n                if (!layer) {\n                    for (i = 0; i < children.length; i++) {\n                        var child = children[i] as RectTileLayer;\n                        if (child.textures.length < this.texPerChild) {\n                            layer = child;\n                            ind = child.textures.length;\n                            child.textures.push(texture);\n                            break;\n                        }\n                    }\n                    if (!layer) {\n                        layer = new RectTileLayer(this.zIndex, texture);\n                        layer.compositeParent = true;\n                        layer.offsetX = Constant.boundSize;\n                        layer.offsetY = Constant.boundSize;\n                        children.push(layer);\n                        ind = 0;\n                    }\n                }\n            }\n\n            this._lastLayer = layer;\n            layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.orig.width, texture.orig.height, animX, animY, texture.rotate, animWidth, animHeight);\n            return this;\n        }\n\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(\n                    wt.a,\n                    wt.b,\n                    wt.c,\n                    wt.d,\n                    wt.tx * renderer.resolution,\n                    wt.ty * renderer.resolution\n                );\n            }\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                (layers[i] as RectTileLayer).renderCanvasCore(renderer);\n            }\n        }\n\n        renderWebGL(renderer: PIXI.WebGLRenderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var gl = renderer.gl;\n            var plugin = renderer.plugins.tilemap;\n            renderer.setObjectRenderer(plugin);\n            var shader = plugin.getShader();\n            renderer.bindShader(shader);\n            //TODO: dont create new array, please\n            this._globalMat = this._globalMat || new PIXI.Matrix();\n            renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\n            shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\n            shader.uniforms.shadowColor = this.shadowColor;\n            var af = shader.uniforms.animationFrame = plugin.tileAnim;\n            //shader.syncUniform(shader.uniforms.animationFrame);\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                (layers[i] as RectTileLayer).renderWebGLCore(renderer, plugin);\n            }\n        }\n\n        isModified(anim: boolean) {\n            var layers = this.children;\n            if (this.modificationMarker !== layers.length) {\n                return true;\n            }\n            for (var i = 0; i < layers.length; i++) {\n                if ((layers[i] as RectTileLayer).isModified(anim)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        clearModify() {\n            var layers = this.children;\n            this.modificationMarker = layers.length;\n            for (var i = 0; i < layers.length; i++) {\n                (layers[i] as RectTileLayer).clearModify();\n            }\n        }\n    }\n\n}\n","namespace pixi_tilemap {\r\n\r\n    export const Constant = {\r\n        maxTextures: 4,\r\n        bufferSize: 2048,\r\n        boundSize: 1024,\r\n        boundCountPerBuffer: 4,\r\n    }\r\n\r\n}\r\n","namespace pixi_tilemap {\r\n\r\n    class GraphicsLayer extends PIXI.Graphics {\r\n\r\n        z: number;\r\n        zIndex: number;\r\n\r\n        constructor(zIndex: number) {\r\n            super();\r\n            this.z = this.zIndex = zIndex;\r\n        }\r\n\r\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\r\n            var wt: PIXI.Matrix = null;\r\n            if (renderer.plugins.tilemap.dontUseTransform) {\r\n                wt = this.transform.worldTransform;\r\n                this.transform.worldTransform = PIXI.Matrix.IDENTITY;\r\n            }\r\n            renderer.plugins.graphics.render(this);\r\n            if (renderer.plugins.tilemap.dontUseTransform) {\r\n                this.transform.worldTransform = wt;\r\n            }\r\n            renderer.context.globalAlpha = 1.0;\r\n        }\r\n\r\n        renderWebGL(renderer: PIXI.WebGLRenderer) {\r\n            if (!this._webGL[renderer.CONTEXT_UID])\r\n                this.dirty++;\r\n            super.renderWebGL(renderer)\r\n        }\r\n\r\n        isModified(anim: boolean): boolean {\r\n            return false;\r\n        }\r\n\r\n        clearModify() {\r\n        }\r\n    }\r\n\r\n}\r\n","namespace pixi_tilemap {\n\n    import glCore = PIXI.glCore;\n    import GroupD8 = PIXI.GroupD8;\n\n    export const POINT_STRUCT_SIZE = 12;\n\n    export class RectTileLayer extends PIXI.Container {\n\n        constructor(zIndex: number, texture: PIXI.Texture | Array<PIXI.Texture>) {\n            super();\n            this.initialize(zIndex, texture);\n        }\n\n        updateTransform() {\n            super.displayObjectUpdateTransform()\n        }\n\n        z = 0;\n        zIndex = 0;\n        modificationMarker = 0;\n        shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n        _globalMat: PIXI.Matrix = null;\n\n        pointsBuf: Array<number> = [];\n        hasAnim = false;\n        textures: Array<PIXI.Texture>;\n\n        offsetX = 0;\n        offsetY = 0;\n        compositeParent = false;\n\n        initialize(zIndex: number, textures: PIXI.Texture | Array<PIXI.Texture>) {\n            if (!textures) {\n                textures = [];\n            } else if (!(textures instanceof Array) && (textures as PIXI.Texture).baseTexture) {\n                textures = [textures as PIXI.Texture];\n            }\n            this.textures = textures as Array<PIXI.Texture>;\n            this.z = this.zIndex = zIndex;\n            // this.visible = false;\n        }\n\n        clear() {\n            this.pointsBuf.length = 0;\n            this.modificationMarker = 0;\n            this.hasAnim = false;\n        }\n\n        addFrame(texture_: PIXI.Texture | String | number, x: number, y: number, animX: number, animY: number) {\n            var texture: PIXI.Texture;\n            var textureIndex = 0;\n\n            if (typeof texture_ === \"number\") {\n                textureIndex = texture_;\n                texture = this.textures[textureIndex];\n            } else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.fromImage(texture_);\n                } else {\n                    texture = texture_ as PIXI.Texture;\n                }\n\n                var found = false;\n                var textureList = this.textures;\n                for (var i = 0; i < textureList.length; i++) {\n                    if (textureList[i].baseTexture === texture.baseTexture) {\n                        textureIndex = i;\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    // textureIndex = this.textures.length;\n                    // this.textures.push(texture);\n                    return false;\n                }\n            }\n\n            this.addRect(textureIndex, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        }\n\n        addRect(textureIndex: number, u: number, v: number, x: number, y: number, tileWidth: number, tileHeight: number, animX: number = 0, animY: number = 0, rotate: number = 0, animWidth: number = 1024, animHeight: number = 1024) {\n            const pb = this.pointsBuf;\n            this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n\n            pb.push(u);\n            pb.push(v);\n            pb.push(x);\n            pb.push(y);\n            pb.push(tileWidth);\n            pb.push(tileHeight);\n            pb.push(rotate);\n            pb.push(animX);\n            pb.push(animY);\n            pb.push(textureIndex);\n            pb.push(animWidth);\n            pb.push(animHeight);\n        }\n\n        tileRotate(rotate: number) {\n            const pb = this.pointsBuf;\n            pb[pb.length - 3] = rotate;\n        }\n\n        tileAnimX(offset: number, count: number) {\n            const pb = this.pointsBuf;\n\n            pb[pb.length - 5] = offset;\n            pb[pb.length - 2] = count;\n        }\n\n        tileAnimY(offset: number, count: number) {\n            const pb = this.pointsBuf;\n\n            pb[pb.length - 4] = offset;\n            pb[pb.length - 1] = count;\n        }\n\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(\n                    wt.a,\n                    wt.b,\n                    wt.c,\n                    wt.d,\n                    wt.tx * renderer.resolution,\n                    wt.ty * renderer.resolution\n                );\n            }\n            this.renderCanvasCore(renderer);\n        }\n\n        renderCanvasCore(renderer: PIXI.CanvasRenderer) {\n            if (this.textures.length === 0) return;\n            var points = this.pointsBuf;\n            renderer.context.fillStyle = '#000000';\n            for (var i = 0, n = points.length; i < n; i += POINT_STRUCT_SIZE) {\n                var x1 = points[i], y1 = points[i + 1];\n                var x2 = points[i + 2], y2 = points[i + 3];\n                var w = points[i + 4];\n                var h = points[i + 5];\n                var rotate = points[i + 6];\n                x1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[0];\n                y1 += points[i + 8] * renderer.plugins.tilemap.tileAnim[1];\n                var textureIndex = points[i + 8];\n\n                //canvas does not work with rotate!!!!\n\n                if (textureIndex >= 0) {\n                    renderer.context.drawImage(this.textures[textureIndex].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n                } else {\n                    renderer.context.globalAlpha = 0.5;\n                    renderer.context.fillRect(x2, y2, w, h);\n                    renderer.context.globalAlpha = 1;\n                }\n            }\n        }\n\n        vbId = 0;\n        vb: any = null;\n        vbBuffer: ArrayBuffer = null;\n        vbArray: Float32Array = null;\n        vbInts: Uint32Array = null;\n\n        getVb(renderer: TileRenderer) {\n            var _vb = this.vb;\n\n            if (_vb) {\n                if (_vb.rendererSN === renderer.sn) {\n                    return _vb;\n                }\n                this.destroyVb();\n            }\n\n            return null;\n        }\n\n        destroyVb() {\n            if (this.vb) {\n                this.vb.vb.destroy();\n                this.vb.vao.destroy();\n                this.vb = null;\n            }\n        }\n\n        renderWebGL(renderer: PIXI.WebGLRenderer) {\n            var gl = renderer.gl;\n            var plugin = renderer.plugins.simpleTilemap;\n            var shader = plugin.getShader();\n            renderer.setObjectRenderer(plugin);\n            renderer.bindShader(shader);\n            //TODO: dont create new array, please\n            this._globalMat = this._globalMat || new PIXI.Matrix();\n            renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\n            shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\n            shader.uniforms.shadowColor = this.shadowColor;\n            var af = shader.uniforms.animationFrame = plugin.tileAnim;\n            //shader.syncUniform(shader.uniforms.animationFrame);\n            this.renderWebGLCore(renderer, plugin);\n        }\n\n        renderWebGLCore(renderer: PIXI.WebGLRenderer, plugin: PIXI.ObjectRenderer) {\n            var points = this.pointsBuf;\n            if (points.length === 0) return;\n            var rectsCount = points.length / POINT_STRUCT_SIZE;\n            var tile = plugin || renderer.plugins.simpleTilemap;\n            var gl = renderer.gl;\n\n\n            var shader = tile.getShader();\n            var textures = this.textures;\n            if (textures.length === 0) return;\n\n            tile.bindTextures(renderer, shader, textures);\n\n            //lost context! recover!\n            var vb = this.getVb(tile as TileRenderer);\n            if (!vb) {\n                vb = tile.createVb();\n                this.vb = vb;\n                this.vbId = vb.id;\n                this.vbBuffer = null;\n                this.modificationMarker = 0;\n            }\n            var vao = vb.vao;\n            renderer.bindVao(vao);\n\n            tile.checkIndexBuffer(rectsCount);\n\n            const boundCountPerBuffer = Constant.boundCountPerBuffer;\n\n            var vertexBuf = vb.vb as glCore.GLBuffer;\n            //if layer was changed, re-upload vertices\n            vertexBuf.bind();\n            var vertices = rectsCount * shader.vertPerQuad;\n            if (vertices === 0) return;\n            if (this.modificationMarker !== vertices) {\n                this.modificationMarker = vertices;\n                var vs = shader.stride * vertices;\n                if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n                    //!@#$ happens, need resize\n                    var bk = shader.stride;\n                    while (bk < vs) {\n                        bk *= 2;\n                    }\n                    this.vbBuffer = new ArrayBuffer(bk);\n                    this.vbArray = new Float32Array(this.vbBuffer);\n                    this.vbInts = new Uint32Array(this.vbBuffer);\n                    vertexBuf.upload(this.vbBuffer, 0, true);\n                }\n\n                var arr = this.vbArray, ints = this.vbInts;\n                //upload vertices!\n                var sz = 0;\n                //var tint = 0xffffffff;\n                var textureId: number = 0;\n                var shiftU: number = this.offsetX;\n                var shiftV: number = this.offsetY;\n\n                //var tint = 0xffffffff;\n                var tint = -1;\n                for (var i = 0; i < points.length; i += POINT_STRUCT_SIZE) {\n                    var eps = 0.5;\n                    if (this.compositeParent) {\n                        if (boundCountPerBuffer > 1) {\n                            //TODO: what if its more than 4?\n                            textureId = (points[i + 9] >> 2);\n                            shiftU = this.offsetX * (points[i + 9] & 1);\n                            shiftV = this.offsetY * ((points[i + 9] >> 1) & 1);\n                        } else {\n                            textureId = points[i + 9];\n                            shiftU = 0;\n                            shiftV = 0;\n                        }\n                    }\n                    let x = points[i + 2], y = points[i + 3];\n                    let w = points[i + 4], h = points[i + 5];\n                    let rotate = points[i + 6];\n                    let u = points[i] + shiftU, v = points[i + 1] + shiftV;\n\n                    const animX = points[i + 7], animY = points[i + 8];\n                    const animWidth = points[i + 10] || 1024, animHeight = points[i + 11] || 1024;\n                    const animXEncoded = animX + (animWidth * 2048);\n                    const animYEncoded = animY + (animHeight * 2048);\n\n                    let u0: number, v0: number, u1: number, v1: number, u2: number, v2: number, u3: number, v3: number;\n                    if (rotate === 0) {\n                        u0 = u;\n                        v0 = v;\n                        u1 = u + w;\n                        v1 = v;\n                        u2 = u + w;\n                        v2 = v + h;\n                        u3 = u;\n                        v3 = v + h;\n                    } else {\n                        let w2 = w / 2;\n                        let h2 = h / 2;\n                        if (rotate % 4 !== 0) {\n                            w2 = h / 2;\n                            h2 = w / 2;\n                        }\n                        const cX = u + w2;\n                        const cY = v + h2;\n\n                        rotate = GroupD8.add(rotate, GroupD8.NW);\n                        u0 = cX + (w2 * GroupD8.uX(rotate));\n                        v0 = cY + (h2 * GroupD8.uY(rotate));\n\n                        rotate = GroupD8.add(rotate, 2); // rotate 90 degrees clockwise\n                        u1 = cX + (w2 * GroupD8.uX(rotate));\n                        v1 = cY + (h2 * GroupD8.uY(rotate));\n\n                        rotate = GroupD8.add(rotate, 2);\n                        u2 = cX + (w2 * GroupD8.uX(rotate));\n                        v2 = cY + (h2 * GroupD8.uY(rotate));\n\n                        rotate = GroupD8.add(rotate, 2);\n                        u3 = cX + (w2 * GroupD8.uX(rotate));\n                        v3 = cY + (h2 * GroupD8.uY(rotate));\n                    }\n\n                    arr[sz++] = x;\n                    arr[sz++] = y;\n                    arr[sz++] = u0;\n                    arr[sz++] = v0;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animXEncoded;\n                    arr[sz++] = animYEncoded;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y;\n                    arr[sz++] = u1;\n                    arr[sz++] = v1;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animXEncoded;\n                    arr[sz++] = animYEncoded;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u2;\n                    arr[sz++] = v2;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animXEncoded;\n                    arr[sz++] = animYEncoded;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u3;\n                    arr[sz++] = v3;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animXEncoded;\n                    arr[sz++] = animYEncoded;\n                    arr[sz++] = textureId;\n                }\n\n                // if (vs > this.vbArray.length/2 ) {\n                vertexBuf.upload(arr, 0, true);\n                // } else {\n                //     var view = arr.subarray(0, vs);\n                //     vb.upload(view, 0);\n                // }\n            }\n            gl.drawElements(gl.TRIANGLES, rectsCount * 6, gl.UNSIGNED_SHORT, 0);\n        }\n\n        isModified(anim: boolean) {\n            if (this.modificationMarker !== this.pointsBuf.length ||\n                anim && this.hasAnim) {\n                return true;\n            }\n            return false;\n        }\n\n        clearModify() {\n            this.modificationMarker = this.pointsBuf.length;\n        }\n\n        destroy(options?: PIXI.DestroyOptions | boolean) {\n            super.destroy(options);\n            this.destroyVb();\n        }\n    }\n\n}\n","namespace pixi_tilemap {\n\n    import GLBuffer = PIXI.glCore.GLBuffer;\n    import VertexArrayObject = PIXI.glCore.VertexArrayObject;\n\n    var rectShaderFrag = `\nvarying vec2 vTextureCoord;\nvarying vec4 vFrame;\nvarying float vTextureId;\nuniform vec4 shadowColor;\nuniform sampler2D uSamplers[%count%];\nuniform vec2 uSamplerSize[%count%];\n\nvoid main(void){\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\n   float textureId = floor(vTextureId + 0.5);\n\n   vec4 color;\n   %forloop%\n   gl_FragColor = color;\n}\n`;\n\n    var rectShaderVert = `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aFrame;\nattribute vec2 aAnim;\nattribute float aTextureId;\nattribute float aAnimWidth;\nattribute float aAnimHeight;\n\nuniform mat3 projectionMatrix;\nuniform vec2 animationFrame;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vFrame;\n\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n   vec2 animCount = floor((aAnim + 0.5) / 2048.0);\n   vec2 animFrameOffset = aAnim - animCount * 2048.0;\n   vec2 animOffset = animFrameOffset * floor(mod(animationFrame + 0.5, animCount));\n\n   vTextureCoord = aTextureCoord + animOffset;\n   vFrame = aFrame + vec4(animOffset, animOffset);\n   vTextureId = aTextureId;\n}\n`;\n\n    export abstract class TilemapShader extends PIXI.Shader {\n\n        maxTextures = 0;\n        indexBuffer: GLBuffer;\n\n        constructor(gl: WebGLRenderingContext, maxTextures: number, shaderVert: string, shaderFrag: string) {\n            super(gl,\n                shaderVert,\n                shaderFrag\n            );\n            this.maxTextures = maxTextures;\n            shaderGenerator.fillSamplers(this, this.maxTextures);\n        }\n\n        abstract createVao(renderer: PIXI.WebGLRenderer, vb: GLBuffer): VertexArrayObject;\n    }\n\n    export class RectTileShader extends TilemapShader {\n        vertSize = 11;\n        vertPerQuad = 4;\n        stride = this.vertSize * 4;\n\n        constructor(gl: WebGLRenderingContext, maxTextures: number) {\n            super(gl,\n                maxTextures,\n                rectShaderVert,\n                shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)\n            );\n            shaderGenerator.fillSamplers(this, this.maxTextures);\n        }\n\n        createVao(renderer: PIXI.WebGLRenderer, vb: GLBuffer) {\n            var gl = renderer.gl;\n            return renderer.createVao()\n                .addIndex(this.indexBuffer)\n                .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\n                .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\n                .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\n                .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, 8 * 4)\n                .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, 10 * 4)\n        }\n    }\n\n}\n","namespace pixi_tilemap {\r\n\r\n    import glCore = PIXI.glCore;\r\n\r\n    function _hackSubImage(tex: glCore.GLTexture, sprite: PIXI.Sprite, clearBuffer?: Uint8Array, clearWidth?: number, clearHeight?: number) {\r\n        const gl = tex.gl;\r\n        const baseTex = sprite.texture.baseTexture;\r\n        if (clearBuffer && clearWidth > 0 && clearHeight > 0)\r\n        {\r\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, clearWidth, clearHeight, tex.format, tex.type, clearBuffer);\r\n        }\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, tex.format, tex.type, baseTex.source as HTMLImageElement);\r\n    }\r\n\r\n    /*\r\n     * Renderer for rectangle tiles.\r\n     *\r\n     * @class\r\n     * @memberof PIXI.tilemap\r\n     * @extends PIXI.ObjectRenderer\r\n     * @param renderer {PIXI.WebGLRenderer} The renderer this sprite batch works for.\r\n     */\r\n\r\n    export class TileRenderer extends PIXI.ObjectRenderer {\r\n\r\n        static vbAutoincrement = 0;\r\n        static snAutoincrement = 0;\r\n\r\n        static SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\r\n        static DO_CLEAR = false;\r\n\r\n        renderer: PIXI.WebGLRenderer;\r\n        gl: WebGLRenderingContext;\r\n        sn: number = -1;\r\n        indices = new Uint16Array(0);\r\n        indexBuffer: glCore.GLBuffer;\r\n        lastTimeCheck = 0;\r\n        tileAnim = [0, 0];\r\n        texLoc: Array<number> = [];\r\n\r\n        rectShader: RectTileShader;\r\n        boundSprites: Array<PIXI.Sprite>;\r\n        glTextures: Array<PIXI.RenderTexture>;\r\n\r\n        _clearBuffer: Uint8Array;\r\n\r\n        constructor(renderer: PIXI.WebGLRenderer) {\r\n            super(renderer)\r\n        }\r\n\r\n        onContextChange() {\r\n            const gl = this.renderer.gl;\r\n            const maxTextures = Constant.maxTextures;\r\n\r\n            this.sn = TileRenderer.snAutoincrement++;\r\n\r\n            this.rectShader = new RectTileShader(gl, maxTextures);\r\n            this.checkIndexBuffer(2000);\r\n            this.rectShader.indexBuffer = this.indexBuffer;\r\n            this.glTextures = [];\r\n            this.boundSprites = [];\r\n            this.initBounds();\r\n        }\r\n\r\n        initBounds() {\r\n            if (Constant.boundCountPerBuffer <= 1) {\r\n                return;\r\n            }\r\n\r\n            const gl = this.renderer.gl;\r\n            const maxTextures = Constant.maxTextures;\r\n            for (let i = 0; i < maxTextures; i++) {\r\n                const rt = PIXI.RenderTexture.create(Constant.bufferSize, Constant.bufferSize);\r\n                rt.baseTexture.premultipliedAlpha = true;\r\n                rt.baseTexture.scaleMode = TileRenderer.SCALE_MODE;\r\n                rt.baseTexture.wrapMode = PIXI.WRAP_MODES.CLAMP;\r\n                this.renderer.textureManager.updateTexture(rt);\r\n\r\n                this.glTextures.push(rt);\r\n                const bounds = this.boundSprites;\r\n                for (let j = 0; j < Constant.boundCountPerBuffer; j++) {\r\n                    const spr = new PIXI.Sprite();\r\n                    spr.position.x = Constant.boundSize * (j & 1);\r\n                    spr.position.y = Constant.boundSize * (j >> 1);\r\n                    bounds.push(spr);\r\n                }\r\n            }\r\n        }\r\n\r\n        bindTexturesWithoutRT(renderer: PIXI.WebGLRenderer, shader: TilemapShader, textures: Array<PIXI.Texture>) {\r\n            const len = textures.length;\r\n            const maxTextures = Constant.maxTextures;\r\n\r\n            let samplerSize: Array<number> = shader.uniforms.uSamplerSize;\r\n            this.texLoc.length = 0;\r\n            for (let i = 0; i < textures.length; i++) {\r\n                const texture = textures[i];\r\n                if (!texture || !texture.valid) {\r\n                    return;\r\n                }\r\n                this.texLoc.push(renderer.bindTexture(textures[i], i, true))\r\n                //TODO: add resolution here\r\n                samplerSize[i*2] = 1.0 / textures[i].baseTexture.width;\r\n                samplerSize[i*2 + 1] = 1.0 / textures[i].baseTexture.height;\r\n            }\r\n            shader.uniforms.uSamplerSize = samplerSize;\r\n            shader.uniforms.uSamplers = this.texLoc;\r\n        }\r\n\r\n        bindTextures(renderer: PIXI.WebGLRenderer, shader: TilemapShader, textures: Array<PIXI.Texture>) {\r\n            const len = textures.length;\r\n            const maxTextures = Constant.maxTextures;\r\n            if (len > Constant.boundCountPerBuffer * maxTextures) {\r\n                return;\r\n            }\r\n            if (Constant.boundCountPerBuffer <= 1) {\r\n                this.bindTexturesWithoutRT(renderer, shader, textures);\r\n                return;\r\n            }\r\n            const doClear = TileRenderer.DO_CLEAR;\r\n            if (doClear && !this._clearBuffer) {\r\n                this._clearBuffer = new Uint8Array(Constant.boundSize * Constant.boundSize * 4);\r\n            }\r\n            const glts = this.glTextures;\r\n            const bounds = this.boundSprites;\r\n\r\n            const oldActiveRenderTarget = this.renderer._activeRenderTarget;\r\n\r\n            let i: number;\r\n            for (i = 0; i < len; i++) {\r\n                const texture = textures[i];\r\n                if (!texture || !texture.valid) continue;\r\n                const bs = bounds[i];\r\n                if (!bs.texture ||\r\n                    bs.texture.baseTexture !== texture.baseTexture) {\r\n                    bs.texture = texture;\r\n                    const glt = glts[i >> 2];\r\n                    renderer.bindTexture(glt, 0, true);\r\n                    if (doClear) {\r\n                        _hackSubImage((glt.baseTexture as any)._glTextures[renderer.CONTEXT_UID], bs, this._clearBuffer, Constant.boundSize, Constant.boundSize);\r\n                    } else {\r\n                        _hackSubImage((glt.baseTexture as any)._glTextures[renderer.CONTEXT_UID], bs);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // fix in case we are inside of filter or renderTexture\r\n            if (!oldActiveRenderTarget.root) {\r\n                this.renderer._activeRenderTarget.frameBuffer.bind();\r\n            }\r\n\r\n            this.texLoc.length = 0;\r\n            var gltsUsed = (i + 3) >> 2;\r\n            for (i = 0; i < gltsUsed; i++) {\r\n                //remove \"i, true\" after resolving a bug\r\n                this.texLoc.push(renderer.bindTexture(glts[i], i, true))\r\n            }\r\n\r\n            shader.uniforms.uSamplers = this.texLoc;\r\n        }\r\n\r\n        start() {\r\n            this.renderer.state.setBlendMode(PIXI.BLEND_MODES.NORMAL);\r\n            //sorry, nothing\r\n        }\r\n\r\n        createVb() {\r\n            const id = ++TileRenderer.vbAutoincrement;\r\n            const shader = this.getShader();\r\n            const gl = this.renderer.gl;\r\n\r\n            this.renderer.bindVao(null);\r\n\r\n            const vb = PIXI.glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n            const stuff = {\r\n                id: id,\r\n                vb: vb,\r\n                vao: shader.createVao(this.renderer, vb),\r\n                lastTimeAccess: Date.now(),\r\n                shader: shader,\r\n                rendererSN: this.sn\r\n            };\r\n            return stuff;\r\n        }\r\n\r\n        checkIndexBuffer(size: number) {\r\n            // the total number of indices in our array, there are 6 points per quad.\r\n            const totalIndices = size * 6;\r\n            let indices = this.indices;\r\n            if (totalIndices <= indices.length) {\r\n                return;\r\n            }\r\n            let len = indices.length || totalIndices;\r\n            while (len < totalIndices) {\r\n                len <<= 1;\r\n            }\r\n\r\n            indices = new Uint16Array(len);\r\n            this.indices = indices;\r\n\r\n            // fill the indices with the quads to draw\r\n            for (let i = 0, j = 0; i + 5 < indices.length; i += 6, j += 4) {\r\n                indices[i + 0] = j + 0;\r\n                indices[i + 1] = j + 1;\r\n                indices[i + 2] = j + 2;\r\n                indices[i + 3] = j + 0;\r\n                indices[i + 4] = j + 2;\r\n                indices[i + 5] = j + 3;\r\n            }\r\n\r\n            if (this.indexBuffer) {\r\n                this.indexBuffer.upload(indices);\r\n            } else {\r\n                let gl = this.renderer.gl;\r\n                this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\r\n            }\r\n        }\r\n\r\n        getShader(): TilemapShader {\r\n            return this.rectShader;\r\n        }\r\n\r\n        destroy() {\r\n            super.destroy();\r\n            this.rectShader.destroy();\r\n            this.rectShader = null;\r\n        }\r\n    }\r\n\r\n    PIXI.WebGLRenderer.registerPlugin('tilemap', TileRenderer);\r\n\r\n}\r\n","/// <reference path=\"TileRenderer.ts\" />\r\n\r\nnamespace pixi_tilemap {\r\n\r\n    import glCore = PIXI.glCore;\r\n\r\n    /*\r\n     * Renderer for rectangle tiles.\r\n     *\r\n     * @class\r\n     * @memberof PIXI.tilemap\r\n     * @extends PIXI.ObjectRenderer\r\n     * @param renderer {PIXI.WebGLRenderer} The renderer this sprite batch works for.\r\n     */\r\n\r\n    export class SimpleTileRenderer extends TileRenderer {\r\n\r\n        constructor(renderer: PIXI.WebGLRenderer) {\r\n            super(renderer)\r\n        }\r\n\r\n        samplerSize: Array<number> = [];\r\n\r\n        onContextChange() {\r\n            const gl = this.renderer.gl;\r\n\r\n            this.sn = TileRenderer.snAutoincrement++;\r\n\r\n            this.rectShader = new RectTileShader(gl, 1);\r\n            this.checkIndexBuffer(2000);\r\n            this.rectShader.indexBuffer = this.indexBuffer;\r\n        }\r\n\r\n        bindTextures(renderer: PIXI.WebGLRenderer, shader: TilemapShader, textures: Array<PIXI.Texture>) {\r\n            const len = textures.length;\r\n\r\n            let i: number;\r\n            for (i = 0; i < len; i++) {\r\n                const texture = textures[i];\r\n\r\n                if (!texture || !texture.valid) {\r\n                    continue;\r\n                }\r\n\r\n                this.texLoc[0] = renderer.bindTexture(texture, 0, true);\r\n                shader.uniforms.uSamplers = this.texLoc;\r\n\r\n                this.samplerSize[0] = 1.0 / texture.baseTexture.width;\r\n                this.samplerSize[1] = 1.0 / texture.baseTexture.height;\r\n                shader.uniforms.uSamplerSize = this.samplerSize;\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        destroy() {\r\n            super.destroy();\r\n        }\r\n    }\r\n\r\n    PIXI.WebGLRenderer.registerPlugin('simpleTilemap', SimpleTileRenderer);\r\n\r\n}\r\n","namespace pixi_tilemap {\r\n\r\n    export class ZLayer extends PIXI.Container {\r\n\r\n        constructor(tilemap: PIXI.Container, zIndex: number) {\r\n            super();\r\n            this.tilemap = tilemap;\r\n            this.z = zIndex;\r\n        }\r\n\r\n        tilemap: any;\r\n        z: number;\r\n        zIndex: number;\r\n        _previousLayers: number;\r\n        canvasBuffer: HTMLCanvasElement;\r\n        _tempRender: PIXI.CanvasRenderer;\r\n        _lastAnimationFrame: number = -1;\r\n        layerTransform: PIXI.Matrix;\r\n\r\n        clear() {\r\n            var layers = this.children as Array<CompositeRectTileLayer>;\r\n            for (var i = 0; i < layers.length; i++)\r\n                layers[i].clear();\r\n            this._previousLayers = 0;\r\n        }\r\n\r\n        cacheIfDirty() {\r\n            var tilemap: any = this.tilemap;\r\n            var layers = this.children as Array<CompositeRectTileLayer>;\r\n            var modified = this._previousLayers !== layers.length;\r\n            this._previousLayers = layers.length;\r\n            var buf = this.canvasBuffer;\r\n            var tempRender = this._tempRender;\r\n            if (!buf) {\r\n                buf = this.canvasBuffer = document.createElement('canvas');\r\n                tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, {view: buf});\r\n                tempRender.context = tempRender.rootContext;\r\n                tempRender.plugins.tilemap.dontUseTransform = true;\r\n            }\r\n            if (buf.width !== tilemap._layerWidth ||\r\n                buf.height !== tilemap._layerHeight) {\r\n                buf.width = tilemap._layerWidth;\r\n                buf.height = tilemap._layerHeight;\r\n                modified = true;\r\n            }\r\n            var i: number;\r\n            if (!modified) {\r\n                for (i = 0; i < layers.length; i++) {\r\n                    if (layers[i].isModified(this._lastAnimationFrame !== tilemap.animationFrame)) {\r\n                        modified = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this._lastAnimationFrame = tilemap.animationFrame;\r\n            if (modified) {\r\n                if (tilemap._hackRenderer) {\r\n                    tilemap._hackRenderer(tempRender);\r\n                }\r\n                tempRender.context.clearRect(0, 0, buf.width, buf.height);\r\n                for (i = 0; i < layers.length; i++) {\r\n                    layers[i].clearModify();\r\n                    layers[i].renderCanvas(tempRender);\r\n                }\r\n            }\r\n            this.layerTransform = this.worldTransform;\r\n            for (i = 0; i < layers.length; i++) {\r\n                this.layerTransform = layers[i].worldTransform;\r\n                break;\r\n            }\r\n        }\r\n\r\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\r\n            this.cacheIfDirty();\r\n            var wt = this.layerTransform;\r\n            renderer.context.setTransform(\r\n                wt.a,\r\n                wt.b,\r\n                wt.c,\r\n                wt.d,\r\n                wt.tx * renderer.resolution,\r\n                wt.ty * renderer.resolution\r\n            );\r\n            var tilemap = this.tilemap;\r\n            renderer.context.drawImage(this.canvasBuffer, 0, 0);\r\n        }\r\n    }\r\n}\r\n","/// <reference types=\"pixi.js\" />\r\n\r\nnamespace pixi_tilemap {\r\n\r\n    (PIXI as any).tilemap = pixi_tilemap;\r\n\r\n}\r\n","namespace pixi_tilemap.shaderGenerator {\r\n\r\n    export function fillSamplers(shader: TilemapShader, maxTextures: number) {\r\n        var sampleValues: Array<number> = [];\r\n        for (var i = 0; i < maxTextures; i++)\r\n        {\r\n            sampleValues[i] = i;\r\n        }\r\n        shader.bind();\r\n        shader.uniforms.uSamplers = sampleValues;\r\n\r\n        var samplerSize: Array<number> = [];\r\n        for (i = 0; i < maxTextures; i++) {\r\n            samplerSize.push(1.0 / Constant.bufferSize);\r\n            samplerSize.push(1.0 / Constant.bufferSize);\r\n        }\r\n        shader.uniforms.uSamplerSize = samplerSize;\r\n    }\r\n\r\n    export function generateFragmentSrc(maxTextures: number, fragmentSrc: string) {\r\n        return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\r\n            .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\r\n    }\r\n\r\n    export function generateSampleSrc(maxTextures: number) {\r\n        var src = '';\r\n\r\n        src += '\\n';\r\n        src += '\\n';\r\n\r\n        src += 'if(vTextureId <= -1.0) {';\r\n        src += '\\n\\tcolor = shadowColor;';\r\n        src += '\\n}';\r\n\r\n        for (var i = 0; i < maxTextures; i++)\r\n        {\r\n            src += '\\nelse ';\r\n\r\n            if(i < maxTextures-1)\r\n            {\r\n                src += 'if(textureId == ' + i + '.0)';\r\n            }\r\n\r\n            src += '\\n{';\r\n            src += '\\n\\tcolor = texture2D(uSamplers['+i+'], textureCoord * uSamplerSize['+i+']);';\r\n            src += '\\n}';\r\n        }\r\n\r\n        src += '\\n';\r\n        src += '\\n';\r\n\r\n        return src;\r\n    }\r\n\r\n}\r\n"]}